name: Push Images/Containers to GHCR

on:
  workflow_call:
    inputs:
      image:
        description: 'Name of the Docker image'
        required: true
        type: string
      environment:
        description: 'Deployment environment (main o dev)'
        required: true
        type: string

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log in to GitHub container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Build and push container image to registry
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          push: true
          tags: |
            ${{ github.ref == 'refs/heads/main' && format('ghcr.io/{0}:latest', env.REPO) || '' }}
            ${{ github.ref == 'refs/heads/dev' && format('ghcr.io/{0}:latest-dev', env.REPO) || '' }}
            ghcr.io/${{ env.REPO }}:${{ github.sha }}
          file: ./Dockerfile
          build-args: |
            USERNAME=${{ github.actor }}
            TOKEN=${{ github.token }}

      - name: Check Secret Presence
        run: |
          if [ -z "${{ secrets.AZURE_DEV_KEY }}" ]; then
            echo "AZURE_DEV_KEY is not set!"
            exit 1
          else
            echo "AZURE_DEV_KEY is available!"
          fi

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.AZURE_DEV_KEY }}

      - name: Add VM to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.AZURE_DEV_HOST }} >> ~/.ssh/known_hosts

      - name: SSH and Deploy
        run: |
          ssh ${{ secrets.AZURE_DEV_USER }}@${{ secrets.AZURE_DEV_HOST }} << 'EOF'
            cd snippets-infra/
           if [ "${{ inputs.environment }}" = "main" ]; then
            docker compose pull ghcr.io/group-5-ingsis/${{ inputs.image }}:latest
            docker compose up -d --no-deps ${{ inputs.image }}-app
            else
               docker compose pull ghcr.io/group-5-ingsis/${{ inputs.image }}:latest-dev
                docker compose up -d --no-deps ${{ inputs.image }}-app
            fi
          EOF
