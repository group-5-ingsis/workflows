name: Push Images/Containers to GHCR

on:
  workflow_call:
    secrets:
      AZURE_DEV_KEY:
        required: true
      AZURE_DEV_USER:
        required: true
      AZURE_DEV_HOST:
        required: true

permissions:
  contents: read
  packages: write


jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Lowercase the repo name and username
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v5
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          push: true
          tags: |
            ${{ github.ref == 'refs/heads/main' && format('ghcr.io/{0}:latest', env.REPO) || '' }}
            ${{ github.ref == 'refs/heads/dev' && format('ghcr.io/{0}:latest-dev', env.REPO) || '' }}
            ghcr.io/${{ env.REPO }}:${{ github.sha }}
          file: ./Dockerfile
          build-args: |
            USERNAME=${{ github.actor }}
            TOKEN=${{ github.token }}



      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.AZURE_DEV_KEY }}

      - name: Add VM to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.AZURE_DEV_HOST }} >> ~/.ssh/known_hosts

      - name: SSH and Deploy
        run: |
          REPO_NAME=$(basename ${{ env.REPO }})
          
          ssh ${{ secrets.AZURE_DEV_USER }}@${{ secrets.AZURE_DEV_HOST }} << EOF
            set -x  # Enable debug mode
          
            cd snippets-infra/ || { echo "Failed to change directory"; exit 1; }
          
            if [ ${{github.ref == 'refs/heads/main'}} ]; then
              docker pull ghcr.io/${{ env.REPO }}:latest
              docker compose -f docker-compose.prod.yml up -d --no-deps ${REPO_NAME}-app
            elif [ ${{github.ref == 'refs/heads/dev'}} ]; then
              docker pull ghcr.io/${{ env.REPO }}:latest-dev
              docker compose -f docker-compose.dev.yml up -d --no-deps ${REPO_NAME}-app
            else
              exit 1
            fi
          
            echo "Deployment completed."
          EOF
    
     
