name: Push Images/Containers to GHCR

on:
  workflow_call:
    secrets:
      AZURE_KEY:
        required: true
      AZURE_USER:
        required: true
      AZURE_HOST:
        required: true

permissions:
  contents: read
  packages: write


jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      repo: ${{ steps.lowercase_repo.outputs.repo }}

    steps:

      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Lowercase the repo name and username
        id: lowercase_repo
        run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v6
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          push: true
          tags: |
            ${{ github.ref == 'refs/heads/main' && format('ghcr.io/{0}:latest', env.REPO) || '' }}
            ${{ github.ref == 'refs/heads/dev' && format('ghcr.io/{0}:latest-dev', env.REPO) || '' }}
            ghcr.io/${{ env.REPO }}:${{ github.sha }}
          file: ./Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    steps:
      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.AZURE_KEY }}

      - name: Add VM to known_hosts
        run: |
          mkdir -p ~/.ssh
          SSH_HOST=${{ secrets.AZURE_HOST }}
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

      - name: SSH and Deploy
        run: |
          REPO_NAME=$(basename ${{ needs.build.outputs.repo }})
          SSH_USER=${{ secrets.AZURE_USER }}
          SSH_HOST=${{ secrets.AZURE_HOST }}
          IMAGE_TAG=${{ github.environment == 'production' && 'latest' || 'latest-dev' }}
          COMPOSE_FILE=${{ github.environment == 'production' && 'docker-compose.prod.yml' || 'docker-compose.dev.yml' }}

          ssh $SSH_USER@$SSH_HOST << EOF
            set -e

            cd snippets-infra

            docker stop ${REPO_NAME}-app || true 

            docker pull ghcr.io/${{ env.REPO }}:$IMAGE_TAG
            docker-compose -f $COMPOSE_FILE up -d --no-deps ${REPO_NAME}-app

            echo "Deployment completed for $REPO_NAME on $SSH_HOST with tag $IMAGE_TAG."
          EOF
